import { t } from "elysia";

export default t.Object({
  ref: t.String(),
  before: t.String(),
  after: t.String(),
  repository: t.Object({
    id: t.Number(),
    node_id: t.String(),
    name: t.String(),
    full_name: t.String(),
    private: t.Boolean(),
    owner: t.Object({
      name: t.String(),
      email: t.Optional(t.String()),
      login: t.String(),
      id: t.Number(),
      node_id: t.String(),
      avatar_url: t.String(),
      gravatar_id: t.String(),
      url: t.String(),
      html_url: t.String(),
      followers_url: t.String(),
      following_url: t.String(),
      gists_url: t.String(),
      starred_url: t.String(),
      subscriptions_url: t.String(),
      organizations_url: t.String(),
      repos_url: t.String(),
      events_url: t.String(),
      received_events_url: t.String(),
      type: t.String(),
      site_admin: t.Boolean(),
    }),
    html_url: t.String(),
    description: t.Union([t.String(), t.Null()]),
    fork: t.Boolean(),
    url: t.String(),
    forks_url: t.String(),
    keys_url: t.String(),
    collaborators_url: t.String(),
    teams_url: t.String(),
    hooks_url: t.String(),
    issue_events_url: t.String(),
    events_url: t.String(),
    assignees_url: t.String(),
    branches_url: t.String(),
    tags_url: t.String(),
    blobs_url: t.String(),
    git_tags_url: t.String(),
    git_refs_url: t.String(),
    trees_url: t.String(),
    statuses_url: t.String(),
    languages_url: t.String(),
    stargazers_url: t.String(),
    contributors_url: t.String(),
    subscribers_url: t.String(),
    subscription_url: t.String(),
    commits_url: t.String(),
    git_commits_url: t.String(),
    comments_url: t.String(),
    issue_comment_url: t.String(),
    contents_url: t.String(),
    compare_url: t.String(),
    merges_url: t.String(),
    archive_url: t.String(),
    downloads_url: t.String(),
    issues_url: t.String(),
    pulls_url: t.String(),
    milestones_url: t.String(),
    notifications_url: t.String(),
    labels_url: t.String(),
    releases_url: t.String(),
    deployments_url: t.String(),
    created_at: t.Number(),
    updated_at: t.String(),
    pushed_at: t.Number(),
    git_url: t.String(),
    ssh_url: t.String(),
    clone_url: t.String(),
    svn_url: t.String(),
    homepage: t.Union([t.String(), t.Null()]),
    size: t.Number(),
    stargazers_count: t.Number(),
    watchers_count: t.Number(),
    language: t.Union([t.String(), t.Null()]),
    has_issues: t.Boolean(),
    has_projects: t.Boolean(),
    has_downloads: t.Boolean(),
    has_wiki: t.Boolean(),
    has_pages: t.Boolean(),
    has_discussions: t.Boolean(),
    forks_count: t.Number(),
    mirror_url: t.Union([t.String(), t.Null()]),
    archived: t.Boolean(),
    disabled: t.Boolean(),
    open_issues_count: t.Number(),
    license: t.Union([t.String(), t.Null()]),
    allow_forking: t.Boolean(),
    is_template: t.Boolean(),
    web_commit_signoff_required: t.Boolean(),
    topics: t.Array(t.String()),
    visibility: t.String(),
    forks: t.Number(),
    open_issues: t.Number(),
    watchers: t.Number(),
    default_branch: t.String(),
    stargazers: t.Number(),
    master_branch: t.String(),
  }),
  pusher: t.Object({
    name: t.String(),
    email: t.String(),
  }),
  sender: t.Object({
    login: t.String(),
    id: t.Number(),
    node_id: t.String(),
    avatar_url: t.String(),
    gravatar_id: t.String(),
    url: t.String(),
    html_url: t.String(),
    followers_url: t.String(),
    following_url: t.String(),
    gists_url: t.String(),
    starred_url: t.String(),
    subscriptions_url: t.String(),
    organizations_url: t.String(),
    repos_url: t.String(),
    events_url: t.String(),
    received_events_url: t.String(),
    type: t.String(),
    site_admin: t.Boolean(),
  }),
  organization: t.Any(),
  created: t.Boolean(),
  deleted: t.Boolean(),
  forced: t.Boolean(),
  base_ref: t.Union([t.String(), t.Null()]),
  compare: t.String(),
  commits: t.Array(
    t.Object({
      id: t.String(),
      tree_id: t.String(),
      distinct: t.Boolean(),
      message: t.String(),
      timestamp: t.String(),
      url: t.String(),
      author: t.Object({
        name: t.String(),
        email: t.String(),
        username: t.String(),
      }),
      committer: t.Object({
        name: t.String(),
        email: t.String(),
        username: t.String(),
      }),
      added: t.Array(t.String()),
      removed: t.Array(t.String()),
      modified: t.Array(t.String()),
    })
  ),
  head_commit: t.Object({
    id: t.String(),
    tree_id: t.String(),
    distinct: t.Boolean(),
    message: t.String(),
    timestamp: t.String(),
    url: t.String(),
    author: t.Object({
      name: t.String(),
      email: t.String(),
      username: t.String(),
    }),
    committer: t.Object({
      name: t.String(),
      email: t.String(),
      username: t.String(),
    }),
    added: t.Array(t.String()),
    removed: t.Array(t.String()),
    modified: t.Array(t.String()),
  }),
});
